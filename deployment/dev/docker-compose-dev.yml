# Build dev versions of containers

version: "3"

services:
  # actual DB backend
  postgres:
    image: postgres:12
    restart: always
    volumes:
      - db_data_dev:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: postgrespassword

  # DB <-> graphql wrapper Hasura
  graphql-engine:
    build:
      # context from this file's path
      context: ../../packages/gamesdb
      # dockerfile from context's path
      dockerfile: ../../deployment/dev/hasura-migrations.Dockerfile
    image: ttt/hasura:latest
    ports:
      - "8080:8080"
    depends_on:
      - "postgres"
    restart: always
    environment:
      HASURA_GRAPHQL_DATABASE_URL: postgres://postgres:postgrespassword@postgres:5432/postgres
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true" # set to "false" to disable console
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      ## uncomment next line to set an admin secret
      # HASURA_GRAPHQL_ADMIN_SECRET: myadminsecretkey

  gmaster:
    build:
      context: ../..
      dockerfile: deployment/dev/gmaster.Dockerfile
      args:
        GMASTER_PORT: 3000
    image: ttt/gmaster:latest
    healthcheck:
      test: "wget --no-verbose --tries=1 --spider http://localhost:3000/healthcheck || exit 1"
    environment:
      HASURA_URL: http://graphql-engine:8080/v1/graphql
    restart: always
    volumes:
      - ../../packages/apis:/app/packages/apis
      - ../../packages/gmaster/src:/app/packages/gmaster/src
      - ../../packages/gmaster/bin:/app/packages/gmaster/bin
    ports:
      # nodejs debug
      - "9228:9228"

  ghost:
    build:
      context: ../..
      dockerfile: deployment/dev/ghost.Dockerfile
      args:
        GHOST_PORT: 3060
    image: ttt/ghost:latest
    healthcheck:
      test: "wget --no-verbose --tries=1 --spider http://localhost:3060/healthcheck || exit 1"
    environment:
      GMASTER_URL: http://gmaster:3000
      JWT_SECRET:
    restart: always
    volumes:
      - ../../packages/apis:/app/packages/apis
      - ../../packages/ghost/src:/app/packages/ghost/src
    ports:
      - "3060:3060"
      # nodejs debug
      - "9229:9229"

  client:
    build:
      context: ../..
      dockerfile: deployment/dev/client.Dockerfile
      args:
        CLIENT_PORT: 3030
    image: ttt/client:latest
    environment:
      # so, in principle ghost server can be anywhere independent of
      # client server, thus we need to point to it explicitly for runtime
      GHOST_URL: http://localhost:3060
    restart: always
    volumes:
      - ../../packages/apis:/app/packages/apis
      - ../../packages/client/pages:/app/packages/client/pages
      - ../../packages/client/components:/app/packages/client/components
      - ../../packages/client/state-defs:/app/packages/client/state-defs
      - ../../packages/client/state-machine:/app/packages/client/state-machine
    ports:
      - "3030:3030"

volumes:
  db_data_dev:
